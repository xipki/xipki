{
//	"responseCache":{
//		"datasource":{
//			"name":"datasource-cache",
//			"conf":{
//				"file":"etc/ocsp/database/ocsp-cache-db.properties"
//			}
//		},
//		"validity":"1d"
//	},
	"master":true,
	"unknownIssuerBehaviour":"malformedRequest",
	"datasources":[{
		"name":"datasource1",
		"conf":{
			"file":"etc/ocsp/database/ocsp-db.properties"
		}
	},{
		"name":"datasource-crl",
		"conf":{
			"file":"etc/ocsp/database/ocsp-crl-db.properties"
		}
	},{
		"name":"datasource3",
		"conf":{
			"file":"etc/ocsp/database/ca-db.properties"
		}
	}],
	"requestOptions":[{
		"name":"request1",
//		"certpathValidation":{
//			"trustAnchors":{
//				"keystore":{
//					"keystore":{
//						"file":"keycerts/tlskeys/ca/tls-ca-cert.p12"
//					},
//					"password":"1234",
//					"type":"pkcs12"
//				}
//			},
//			"validationModel":"PKIX"
//		},
		"hashAlgorithms":["SHA1","SHA256","SHA384","SHA512"],
		"maxRequestListCount":10,
		"maxRequestSize":4096,
		"nonce":{
			"maxLen":32,
			"minLen":4,
			// valid values are ignore, forbidden, optional and required.
			// in case of ignore and forbidded, maxLen and minLen will be ignored.
			"occurrence":"optional"
		},
		"signatureRequired":false,
		"supportsHttpGet":true,
		"validateSignature":false,
		"versions":["v1"]
	}],
	"responders":[{
		"name":"responder1",
		"inheritCaRevocation":true,
		"mode":"RFC6960",
		"request":"request1",
		"response":"response1",
		"servletPaths":["/responder1"],
		"signer":"signer1",
		"stores":["dbstore1"]
	},{
		"name":"responder2",
		"inheritCaRevocation":true,
		"mode":"RFC6960",
		"request":"request1",
		"response":"response2",
		"servletPaths":["/responder2"],
		"signer":"signer1",
		"stores":["crlstore1"]
	},{
		"name":"responder3",
		"inheritCaRevocation":true,
		"mode":"RFC6960",
		"request":"request1",
		"response":"response1",
		"servletPaths":["/responder3"],
		"signer":"signer1",
		"stores":["dbstore3"]
	}],
	"responseOptions":[{
		"name":"response1",
		"embedCertsMode":"SIGNER",
		"includeCerthash":true,
		"includeInvalidityDate":false,
		"includeRevReason":true,
		"responderIdByName":true
	},{
		"name":"response2",
		"embedCertsMode":"SIGNER_AND_CA",
		"includeCerthash":false,
		"includeInvalidityDate":false,
		"includeRevReason":true,
		"responderIdByName":true
	}],
	"signers":[{
		"name":"signer1",
		"type":"REPLACEME-TOKENTYPE",
		"algorithms":["REPLACEME-SIGALGO"],
		"caCerts":[],
		"key":"REPLACEME-TOKENKEY"
	}],
	"stores":[{
		"name":"dbstore1",
		"ignoreExpiredCert":true,
		"ignoreNotYetValidCert":true,
		"includeArchiveCutoff":true,
		"includeCrlId":false,
		"retentionInterval":-1,
		"minNextUpdatePeriod":"1d",
		"updateInterval":"10m",
		"source":{
			"datasource":"datasource1",
			"type":"xipki-db",
			"conf":{
//				"caCerts": {
//					"includes":[],
//					"excludes":[],
//				}
			}
		},
		"unknownCertBehaviour":"unknown"
	},{
		"name":"crlstore1",
		"ignoreExpiredCert":true,
		"ignoreNotYetValidCert":true,
		"includeArchiveCutoff":false,
		"includeCrlId":true,
		"retentionInterval":0,
		"minNextUpdatePeriod":"1d",
		"updateInterval":"10m",
		"startupDelay":1,
		"source":{
			"datasource":"datasource-crl",
			"type":"crl",
			"conf":{
				"dir":"crls/example-crls",
				"sqlBatchCommit":1000,
				"ignoreExpiredCrls":true
			}
		},
		"unknownCertBehaviour":"good"
	},{
		"name":"dbstore3",
		"ignoreExpiredCert":true,
		"ignoreNotYetValidCert":true,
		"includeArchiveCutoff":true,
		"includeCrlId":false,
		"retentionInterval":-1,
		"minNextUpdatePeriod":"12h",
		"updateInterval":"10m",
		"source":{
			"datasource":"datasource3",
			"type":"xipki-ca-db",
			"conf":{
//				"caCerts": {
//					"includes":[],
//					"excludes":[],
//				}
			}
		},
		"unknownCertBehaviour":"unknown"
	}]
}

